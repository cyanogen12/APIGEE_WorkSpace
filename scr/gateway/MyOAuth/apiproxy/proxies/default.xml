<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules>
        <FaultRule name="SpikeArrestError">
            <Step>
                <Name>API_Common_SpikeArrest_Error</Name>
                <Condition>fault.name="SpikeArrestViolation"</Condition>
            </Step>
        </FaultRule>
        <FaultRule name="QuotaError">
            <Step>
                <Name>API_Common_Quota_Error</Name>
                <Condition>fault.name="QuotaViolation"</Condition>
            </Step>
        </FaultRule>
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>shared_common_preflow</Name>
            </Step>
            <Step>
                <Name>API_Common_Quota</Name>
            </Step>
            <Step>
                <Name>API_Common_LookupCache</Name>
            </Step>
            <Step>
                <Name>API_Commom_AccessEntity</Name>
                <Condition>lookupcache.API_Common_LookupCache.cachehit = false</Condition>
            </Step>
            <Step>
                <Name>API_Common_AE_2_JSON</Name>
                <Condition>lookupcache.API_Common_LookupCache.cachehit = false</Condition>
            </Step>
            <Step>
                <Name>API_Common_PolpulateCache</Name>
                <Condition>lookupcache.API_Common_LookupCache.cachehit = false</Condition>
            </Step>
            <Step>
                <Name>API_Common_Validate_ClientIP</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <PostFlow name="PostFlow">
        <Request/>
        <Response>
            <Step>
                <Name>shared_common_statistics</Name>
            </Step>
            <Step>
                <Name>shared_common_logger</Name>
            </Step>
        </Response>
    </PostFlow>
    <Flows>
        <Flow name="GenerateAuthCode">
            <Description/>
            <Request>
                <Step>
                    <Name>OAuth_GenerateAuthCode</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>AssignAuthCode</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/GenerateAuthCode") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="AuthCodeRedirect">
            <Description/>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/authcoderedirect") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GenerateTokenAC">
            <Description/>
            <Request>
                <Step>
                    <Name>OAuth-v20-1</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/GenerateTokenAC") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="RefreshAccessToken">
            <Description/>
            <Request>
                <Step>
                    <Name>AccessTokenRefresh</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/refreshtoken") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="UnknownResource">
            <Request>
                <Step>
                    <Name>API_Commom_RaiseFault_UnknownResource</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <HTTPProxyConnection>
        <BasePath>/myoauth</BasePath>
        <Properties/>
        <VirtualHost>secure</VirtualHost>
        <VirtualHost>default</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="noTarget">
        <Condition>((proxy.pathsuffix MatchesPath "/GenerateTokenAC") and (request.verb = "POST")) or(proxy.pathsuffix MatchesPath "/authcoderedirect") or (proxy.pathsuffix MatchesPath "/GenerateAuthCode") or ((proxy.pathsuffix MatchesPath "/refreshtoken")</Condition>
    </RouteRule>
    <RouteRule name="default">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>